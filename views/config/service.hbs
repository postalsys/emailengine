<div class="d-sm-flex align-items-center justify-content-between mb-1">
    <h1 class="h3 mb-0 text-gray-800">

        <small><i class="fas fa-cog fa-fw"></i></small>
        Service
    </h1>
</div>

<p class="mb-4">General settings for EmailEngine.</p>

<form method="post" id="settings-form" action="/admin/config/service">
    <input type="hidden" id="crumb" name="crumb" value="{{crumb}}" />

    <div class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">General settings</h6>
        </div>
        <div class="card-body">

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">serviceUrl</a>]</div>

                <label for="settingsServiceUrl">Service URL</label>
                <input type="url" class="form-control {{#if errors.serviceUrl}}is-invalid{{/if}}"
                    id="settingsServiceUrl" name="serviceUrl" value="{{values.serviceUrl}}" data-lpignore="true"
                    autocomplete="off" />
                {{#if errors.serviceUrl}}
                <span class="invalid-feedback">{{errors.serviceUrl}}</span>
                {{/if}}
                <small class="form-text text-muted">Base URL for EmailEngine without the path part.</small>
            </div>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">enableApiProxy</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.enableApiProxy}}is-invalid{{/if}}"
                    id="enableApiProxy" name="enableApiProxy" {{#if values.enableApiProxy}}checked{{/if}} />
                <label class="form-check-label" for="enableApiProxy">Reverse proxy support</label>
                {{#if errors.enableApiProxy}}
                <span class="invalid-feedback">{{errors.enableApiProxy}}</span>
                {{/if}}
                <small class="form-text text-muted">If enabled, then EmailEngine looks for the client
                    IP address from the <code>X-Forwarded-For</code> header. Disable this option if EmailEngine handles
                    web requests directly and is not behind a reverse proxy like Nginx or Caddy.</small>
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">locale</a>]</div>

                <label for="settingsServiceLocale">Default language</label>
                <select id="settingsServiceLocale" class="custom-select custom-select-sm" name="locale" {{#if
                    errors.locale}}is-invalid{{/if}}>
                    {{#each locales}}
                    <option value="{{locale}}" {{#if selected}}selected{{/if}}>{{name}}</option>
                    {{/each}}
                </select>
                {{#if errors.locale}}
                <span class="invalid-feedback">{{errors.locale}}</span>
                {{/if}}
                <small class="form-text text-muted">Language for <u data-toggle="popover" data-trigger="hover"
                        data-html="true"
                        data-content="&#x3C;img src=&#x22;/static/preview/translation.png&#x22; width=&#x22;250&#x22; &#x3E;"
                        style="cursor: default;">public pages</u>, e.g., for the <a
                        href="https://emailengine.app/hosted-authentication" target="_blank"
                        referrerpolicy="{{referrerPolicy}}">hosted authentication</a>
                    form. <a href="https://github.com/postalsys/emailengine/blob/master/translations/README.md"
                        target="_blank" referrerpolicy="{{referrerPolicy}}">See
                        here</a>
                    if you would like to add an additional translation.</small>
            </div>

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">timezone</a>]</div>

                <label for="settingsServiceTimezone">Default timezone</label>
                <select id="settingsServiceTimezone" class="custom-select custom-select-sm" name="timezone" {{#if
                    errors.timezone}}is-invalid{{/if}}>
                    {{#each timezones}}
                    <option value="{{timezone}}" {{#if selected}}selected{{/if}}>{{name}}</option>
                    {{/each}}
                </select>
                {{#if errors.timezone}}
                <span class="invalid-feedback">{{errors.timezone}}</span>
                {{/if}}
            </div>
        </div>
    </div>

    <div class="card mb-4" id="security">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Security settings</h6>
        </div>
        <div class="card-body">

            <div class="form-group">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">serviceSecret</a>]</div>

                <label for="settingsServiceSecret">Service secret</label>

                <div class="input-group">
                    <input type="password" class="form-control {{#if errors.serviceSecret}}is-invalid{{/if}}"
                        id="settingsServiceSecret" name="serviceSecret" value="{{values.serviceSecret}}"
                        data-lpignore="true" autocomplete="off" />

                    <div class="input-group-append">
                        <button class="btn btn-outline-primary" type="button" id="showServiceSecret"><i
                                class="fas fa-eye"></i></button>
                    </div>
                </div>

                {{#if errors.serviceSecret}}
                <span class="invalid-feedback">{{errors.serviceSecret}}</span>
                {{/if}}
                <small class="form-text text-muted">HMAC secret for signing public requests. Changing this value
                    invalidates all tracking links in emails that were sent with the tracking option enabled.</small>
            </div>

            <div class="form-group form-check">

                <div class="text-muted float-right code-link">[<em>Web UI only</em>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.enableTokens}}is-invalid{{/if}}"
                    id="enableTokens" name="enableTokens" {{#if values.enableTokens}}checked{{/if}} />
                <label class="form-check-label" for="enableTokens">Require Access Tokens

                    <span class="badge badge-{{#if values.enableTokens}}success{{else}}danger{{/if}}">{{#if
                        values.enableTokens}}enabled{{else}}disabled{{/if}}</span>
                </label>
                {{#if errors.enableTokens}}
                <span class="invalid-feedback">{{errors.enableTokens}}</span>
                {{/if}}
                <small class="form-text text-muted">You can disable access tokens when in development. Not
                    requiring access tokens to authorize API requests makes running API requests from the
                    command line easier. Always enable access tokens in production.</small>
            </div>

            <div class="form-group form-check">

                <div class="text-muted float-right code-link">[<a
                        href="https://docs.emailengine.app/enabling-secret-encryption/" target="_blank"
                        referrerpolicy="{{referrerPolicy}}">EENGINE_SECRET</a>]</div>

                <input type="checkbox" class="form-check-input" id="encryption" {{#if encryption}}checked{{/if}}
                    disabled />
                <label class="form-check-label" for="encryption">Field level encryption

                    <span class="badge badge-{{#if encryption}}success{{else}}danger{{/if}}">{{#if
                        encryption}}enabled{{else}}disabled{{/if}}</span>

                </label>
                <small class="form-text text-muted">You can not change encryption settings runtime. Set
                    <code>EENGINE_SECRET</code>
                    environment variable when starting EmailEngine to enable encryption. Read more <a
                        href="https://docs.emailengine.app/enabling-secret-encryption/" target="_blank"
                        referrerpolicy="{{referrerPolicy}}">from the
                        documentation</a>.</small>
            </div>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<em>Web UI only</em>]</div>
                <input type="checkbox" class="form-check-input {{#if errors.enableOAuthTokensApi}}is-invalid{{/if}}"
                    id="enableOAuthTokensApi" name="enableOAuthTokensApi" {{#if
                    values.enableOAuthTokensApi}}checked{{/if}} />
                <label class="form-check-label" for="enableOAuthTokensApi">Allow the API endpoint for fetching OAuth2
                    access
                    tokens</label>
                {{#if errors.enableOAuthTokensApi}}
                <span class="invalid-feedback">{{errors.enableOAuthTokensApi}}</span>
                {{/if}}
                <small class="form-text text-muted">If you want to re-use access tokens managed by EmailEngine in other
                    parts of your app, you can enable the <a
                        href="/admin/iframe/docs#/Account/getV1AccountAccountOauthtoken" target="_blank">oauth-token API
                        endpoint</a>. Access to OAuth2 tokens is disabled by default due to the security risk of
                    potentially leaking these tokens.</small>
            </div>
        </div>
    </div>

    <div id="queue_settings" class="card mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Queue settings</h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                    aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Queue actions:</div>
                    <a class="dropdown-item" href="#" id="clean-queues-btn">
                        <i class="fas fa-trash-alt fa-sm clean-icon"></i> <span>Clear completed queue entries</span>
                    </a>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">queueKeep</a>]</div>

                <label for="settingsQueueKeep">How many completed/failed queue entries to keep</label>
                <input type="number" min="0" class="form-control {{#if errors.queueKeep}}is-invalid{{/if}}"
                    id="settingsQueueKeep" name="queueKeep" value="{{values.queueKeep}}" data-lpignore="true"
                    autocomplete="off" />
                {{#if errors.queueKeep}}
                <span class="invalid-feedback">{{errors.queueKeep}}</span>
                {{/if}}
                <small class="form-text text-muted">By default, all queued job entries are deleted after processed, so
                    "Failed" and "Completed" lists are empty in <a href="/admin/arena" target="_blank">Bull Arena</a>.
                    Set this value if you want to keep a fixed number of the latest entries in the list.</small>
            </div>

        </div>
    </div>

    <div id="submission_settings" class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Email submission settings</h6>
        </div>
        <div class="card-body">
            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">deliveryAttempts</a>]</div>

                <label for="settingsDeliveryAttempts">How many times to retry a failed email sending</label>
                <input type="number" min="0" class="form-control {{#if errors.deliveryAttempts}}is-invalid{{/if}}"
                    id="settingsDeliveryAttempts" name="deliveryAttempts" value="{{values.deliveryAttempts}}"
                    data-lpignore="true" autocomplete="off" />
                {{#if errors.deliveryAttempts}}
                <span class="invalid-feedback">{{errors.deliveryAttempts}}</span>
                {{/if}}
                <small class="form-text text-muted">If EmailEngine cannot deliver an email to an SMTP server, it will
                    attempt to retry the action for the specified number of attempts.</small>
            </div>

        </div>
    </div>

    <div id="templates_settings" class="card mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Templates</h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                    aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Template actions:</div>
                    <a class="dropdown-item" href="#" id="preview-header-btn">
                        <i class="fas fa-eye fa-sm clean-icon"></i> <span>Preview</span>
                    </a>
                </div>
            </div>
        </div>
        <div class="card-body">

            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">templateHeader</a>]</div>

                <label>Template header for public pages (HTML code)</label>

                <input type="hidden" class="{{#if errors.templateHeaderElement}}is-invalid{{/if}}"
                    id="templateHeaderElement" name="templateHeader" value="{{values.templateHeader}}">

                <div id="editor-html" class="code-editor"></div>
                <div class="editor-embed-block">
                    <div class="editor-embed-content editor-embed-content-left">
                        HTML content
                    </div>
                    <div class="editor-embed-content editor-embed-content-right">
                        <a href="#" class="toggle-fullscreen" data-target="editor-html">Toggle fullscreen</a>
                    </div>
                </div>

                {{#if errors.templateHeader}}
                <span class="invalid-feedback">{{errors.templateHeader}}</span>
                {{/if}}

                <small class="form-text text-muted">Insert here the HTML code you want to display <u
                        data-toggle="popover" data-trigger="hover" data-html="true"
                        data-content="&#x3C;img src=&#x22;/static/preview/header-template.png&#x22;&#x3E;"
                        style="cursor: default;">on top of public pages</u> like the hosted authentication form.</small>
            </div>

        </div>
    </div>

    <div id="templates_settings" class="card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Pre-processing scripts</h6>
        </div>
        <div class="card-body">


            <p>The following options apply for pre-processing scripts like the filter and map function of the webhook
                routes and document store settings.</p>

            <div class="form-group">

                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">scriptEnv</a>]</div>

                <label>Environment variable (JSON object)</label>

                <input type="hidden" class="{{#if errors.scriptEnv}}is-invalid{{/if}}" id="scriptEnvElement"
                    name="scriptEnv" value="{{values.scriptEnv}}">

                <div id="editor-env" class="code-editor"></div>
                <div class="editor-embed-block">
                    <div class="editor-embed-content editor-embed-content-left">
                        JSON content
                    </div>
                    <div class="editor-embed-content editor-embed-content-right">
                        <a href="#" class="toggle-fullscreen" data-target="editor-env">Toggle fullscreen</a>
                    </div>
                </div>

                {{#if errors.scriptEnv}}
                <span class="invalid-feedback">{{errors.scriptEnv}}</span>
                {{/if}}

                <small class="form-text text-muted">You can set here a JSON object that is used as the value of
                    <code>env</code> variable in all pre-processing scripts.</small>
            </div>

        </div>
    </div>

    <div class="card mb-4" id="labs">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Labs <span class="badge badge-dark">beta</span></h6>
        </div>
        <div class="card-body">

            <p>The following options are not well tested and might change in the futurue. Use these with care.</p>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">trackSentMessages</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.trackSentMessages}}is-invalid{{/if}}"
                    id="trackSentMessages" name="trackSentMessages" {{#if values.trackSentMessages}}checked{{/if}} />
                <label class="form-check-label" for="trackSentMessages">Track opens and clicks</label>
                {{#if errors.trackSentMessages}}
                <span class="invalid-feedback">{{errors.trackSentMessages}}</span>
                {{/if}}
                <small class="form-text text-muted">If enabled, then EmailEngine rewrites HTML links in emails sent
                    through EmailEngine to track opens and clicks. You can also set this in the message level to
                    override the default. See the <a href="https://emailengine.app/sending-emails#tracking"
                        target="_blank" referrerpolicy="{{referrerPolicy}}">documentation</a> for details.<br />
                    <strong>NB!</strong> <a href="{{values.serviceUrl}}" target="_blank">{{values.serviceUrl}}</a> must
                    be publicly accessible for tracking to work.</small>
            </div>

            <div class="form-group form-check">
                <div class="text-muted float-right code-link">[<a href="/admin/iframe/docs#/settings/postV1Settings"
                        target="_blank">resolveGmailCategories</a>]</div>

                <input type="checkbox" class="form-check-input {{#if errors.resolveGmailCategories}}is-invalid{{/if}}"
                    id="resolveGmailCategories" name="resolveGmailCategories" {{#if
                    values.resolveGmailCategories}}checked{{/if}} />
                <label class="form-check-label" for="resolveGmailCategories">Resolve Gmail categories</label>
                {{#if errors.resolveGmailCategories}}
                <span class="invalid-feedback">{{errors.resolveGmailCategories}}</span>
                {{/if}}
                <small class="form-text text-muted">If enabled, EmailEngine resolves the inbox category (also known as
                    the Gmail tab) for incoming emails. Possible category values are the following: <em>social</em>,
                    <em>promotions</em>, <em>updates</em>, <em>forums</em>, and <em>primary</em>. You can find the value
                    in the <em>category</em> property of the <em>messageNew</em> webhook payload.</small>
            </div>

        </div>
    </div>

    <div class="mb-4">
        <button type="submit" class="btn btn-primary btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-cog"></i>
            </span>
            <span class="text">Update settings</span>
        </button>
    </div>

</form>

<form id="preview-form" method="post" action="/admin/config/service/preview">
    <input type="hidden" name="crumb" value="{{crumb}}" />
    <input type="hidden" name="templateHeader" id="preview-header-elm">
</form>


<script src="/static/js/ace/ace.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', () => {

        let showBt = document.getElementById('showServiceSecret');
        let serviceSecretElm = document.getElementById('settingsServiceSecret');

        let showSecret = () => {
            let current = serviceSecretElm.getAttribute('type')
            serviceSecretElm.setAttribute('type', current === 'text' ? 'password' : 'text');
            showBt.blur()
        }

        showBt.addEventListener('click', showSecret);

        const sendCleanPayload = async () => {

            const res = await fetch('/admin/config/service/clean', {
                method: 'post',
                headers: { 'content-type': 'application/json' },
                body: JSON.stringify({
                    crumb: document.getElementById('crumb').value
                })
            })
            if (!res.ok) {
                throw new Error(`HTTP error! status: ${res.status}`);
            }
            const data = await res.json();

            return data;
        }

        let sendingCleanRequest = false;
        document.getElementById('clean-queues-btn').addEventListener('click', e => {
            e.preventDefault();
            if (sendingCleanRequest) {
                e.stopPropagation();
                return
            }
            sendingCleanRequest = true;

            let cleanIconElm = document.querySelector('#clean-queues-btn .clean-icon');
            cleanIconElm.classList.remove('fa-trash-alt');
            cleanIconElm.classList.add('fa-spinner', 'fa-spin');

            sendCleanPayload().then(data => {
                sendingCleanRequest = false;
                cleanIconElm.classList.add('fa-trash-alt');
                cleanIconElm.classList.remove('fa-spinner', 'fa-spin');

                showToast(data.error ? data.error : (data.success ? 'Cleanup request sent' : 'Failed to send payload'), data.success ? 'check-circle' : 'alert-triangle');
            }).catch(err => {
                sendingCleanRequest = false;
                cleanIconElm.classList.add('fa-trash-alt');
                cleanIconElm.classList.remove('fa-spinner', 'fa-spin');

                showToast('Request failed\n' + err.message, 'alert-triangle');
            })
        });


        document.getElementById('preview-header-btn').addEventListener('click', e => {
            e.preventDefault();
            let previewWindow = window.open('about:blank', 'preview-window', '');
            let previewForm = document.getElementById('preview-form');
            previewForm.target = 'preview-window';
            document.getElementById('preview-header-elm').value = editorHtml.getValue();
            previewForm.submit();
        });


        const editors = new Map();

        const editorHtml = ace.edit("editor-html", {
            enableBasicAutocompletion: true,
            enableSnippets: false,
            enableLiveAutocompletion: false,
            useWorker: true
        });
        editors.set("editor-html", editorHtml);

        editorHtml.setTheme("ace/theme/xcode");
        editorHtml.session.setMode("ace/mode/handlebars");
        editorHtml.session.setValue(document.getElementById('templateHeaderElement').value);

        const editorEnv = ace.edit("editor-env", {
            enableBasicAutocompletion: true,
            enableSnippets: false,
            enableLiveAutocompletion: false,
            useWorker: true
        });
        editors.set("editor-env", editorEnv);

        editorEnv.setTheme("ace/theme/xcode");
        editorEnv.session.setMode("ace/mode/json");
        editorEnv.session.setValue(document.getElementById('scriptEnvElement').value);

        document.getElementById('settings-form').addEventListener('submit', () => {
            document.getElementById('templateHeaderElement').value = editorHtml.getValue();
            document.getElementById('scriptEnvElement').value = editorEnv.getValue();
        });

        for (let toggleElm of document.querySelectorAll('.toggle-fullscreen')) {
            let target = toggleElm.dataset.target;
            if (!editors.has(target)) {
                continue
            }
            let targetElm = document.getElementById(target);
            let editor = editors.get(target)

            toggleElm.addEventListener('click', (e) => {
                e.preventDefault();
                e.stopPropagation();
                targetElm.classList.toggle('full-screen-div');
                editor.resize();
                editor.focus();
            });

            targetElm.addEventListener('keydown', e => {
                if (e.key === 'Escape' && targetElm.classList.contains('full-screen-div')) {
                    targetElm.classList.remove('full-screen-div')
                    editor.resize();
                    editor.focus();
                }
            });
        }

    });


</script>